/*
 * Copyright 2007 Si Yin. <Golden Monkey>
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License. 
 */
#ifndef JOB_HPP
#define JOB_HPP

extern "C" {
#include "gordon.h"
}

namespace GM { 
  class Job {
  public:
    Job(int);
    virtual ~Job();
    virtual void serialize(gordon_job_t*) = 0;
    virtual Job* createInstance() = 0;
    virtual void _initialize() = 0;

    void initialize();
    int getJobType();
  protected:
    int jobType;
    bool isInitialized;
  };
  
  inline int Job::getJobType() {
    return jobType;
  }

  inline void Job::initialize() {
    if (isInitialized)
      return;
    _initialize();
    isInitialized = true;
  }
  
  inline Job::Job(int type) : jobType(type), isInitialized(false) {}  
  inline Job::~Job() {}
}


#endif /*JOB_HPP_*/
